import jp.cellfusion.commands.events.CommandEvent;import mx.utils.Delegate;import jp.cellfusion.commands.Command;import jp.cellfusion.commands.ICommand;/** * @author Mk-10 a.k.a. cellfusion */class jp.cellfusion.commands.XMLLoadCommand extends Command implements ICommand {	private var _url:String;	private var _xml:XML;		public function get result():XML { return _xml; }	public function XMLLoadCommand(url:String)	{		_xml = new XML();		_xml.ignoreWhite = true;				_url = url;	}		public function execute():Void	{		_xml.onLoad = Delegate.create(this, loadCompleteHandler);				_xml.load(_url);		dispatchEvent(new CommandEvent(CommandEvent.COMMAND_START, this));	}		private function loadCompleteHandler(success:Boolean):Void	{		if (success) {			dispatchEvent(new CommandEvent(CommandEvent.COMMAND_COMPLETE, this));		} else {			throw new Error("Error! url:"+_url+" の取得に失敗しました");			dispatchEvent(new CommandEvent(CommandEvent.COMMAND_ERROR, this));		}	}	public function clone():ICommand	{		return new XMLLoadCommand(_url);	}		public function abort():Void	{	}		public function resume():Void	{	}}